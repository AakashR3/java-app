node {
    
    def buildNumber = BUILD_NUMBER
    
    stage("Git Clone"){
        
        git url: "https://github.com/AakashR3/pipeline.git",branch: "main"
    }

    stage("Maven clean package"){
        def mavenHome= tool name: "Maven",type: "maven"
         sh "${mavenHome}/bin/mvn clean package"
         sh "mvn -version"
    
    }

    stage("SonarQube Scan") {
        def scannerHome = tool 'SonarQube Scanner'
        def mavenHome= tool name: "Maven",type: "maven"
         withSonarQubeEnv (installationName: 'scan') {
            sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=develop -Dsonar.sources=src/main/java/ -Dsonar.java.binaries=target/classes"
            sh "mvn clean sonar:sonar"
            
        }
    }

     stage("Build Docker Image"){
        sh "docker build -t aakashk33/new-app:${buildNumber} ."
    }

    stage("Docker Login And Push"){
        withCredentials([string(credentialsId:'DockerHubs', variable: 'DockerHubs')]) {
            sh "docker login -u aakashk33 -p ${DockerHubs}"   
         }
       
        sh "docker push aakashk33/new-app:${buildNumber}"
    }

    stage("Docker Login And pull"){
        withCredentials([string(credentialsId: 'DockerHubs', variable: 'DockerHubs')]) {
            sh "docker login -u aakashk33 -p ${DockerHubs}"   
         }
       
        sh "docker pull aakashk33/new-app:${buildNumber}"
    }

    sshagent(['Docker_Dev_Server_SSH']) {
      sh "ssh -o strictHostKeyChecking=no ubuntu@3.108.67.19 docker rm -f newappcontainer || true"

        
        sh "ssh -o strictHostKeyChecking=no ubuntu@3.108.67.19 docker run -d -p 1233:8080 aakashk33/new-app:${buildNumber}"
        sh "ssh -o strictHostKeyChecking=no ubuntu@3.108.67.19 docker ps"
    }
}